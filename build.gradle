plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'io.github.juuxel.loom-quiltflower' version '1.6.0'
	id 'org.quiltmc.quilt-mappings-on-loom' version '4.0.0'
	id 'java-library'
	id 'maven-publish'
}

def targetJavaVersion = 17

archivesBaseName = "${project.archives_base_name}"
group = "${project.maven_group}"
version = "${project.mod_version}+${project.minecraft_version}"

repositories {
	maven {
		name 'QuiltSnapshot'
		url 'https://maven.quiltmc.org/repository/snapshot'
		content {
			includeGroup 'org.quiltmc.fabric_api_qsl'
			includeGroupByRegex 'org.quiltmc.qsl(.[a-z_]+)?'
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings(loom.layered {
		addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${project.quilt_mappings}:v2"))
	})
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modRuntimeOnly include("org.quiltmc.qsl:core:1.0.0+${project.minecraft_version}-SNAPSHOT")
	modImplementation include("org.quiltmc.qsl:block:1.0.0+${project.minecraft_version}-SNAPSHOT")
	modRuntimeOnly include("org.quiltmc.fabric_api_qsl:fabric-networking-api-v1:2.0.0+1.19-SNAPSHOT")
	modRuntimeOnly include("org.quiltmc.fabric_api_qsl:fabric-registry-sync-v0:0.9.8+1.19-SNAPSHOT")
}

java {
	sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
	targetCompatibility = JavaVersion.toVersion(targetJavaVersion)

	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'

	it.options.release.set(targetJavaVersion)
}

processResources {
	inputs.property 'version', project.version

	filesMatching('fabric.mod.json') {
		expand 'version': project.version
	}
}

jar {
	from('LICENSE') {
		rename { "${it}_${project.archivesBaseName}" }
	}
}